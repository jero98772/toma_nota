* bases de datos
3 entrgables
al final aplicacion final con
actualisar
borrar
editar

primera entrega buscar una problematica
y exponer todo eso...

** que es una base de datos
conjunto de datos relacionados entre si

en una base de datos

hay un
gestor
manejador
motor

independencia logica y fisica

**** fisica

**** logica
modificar el esquema sin tener que rescribirlo

**** iventario

identidicar 5 datos que me interese guardar informacion

cajon

string direccionremitente
string remitente
tripla<x,y,z> dimenciones 
string objeto
int peso
string categoria
string ubicacion
unsigned int cantidad
string fecha ingreso
string fecha estimada de recogida
string tipo de empaque
bool estaVivo

empleados

string nombre
string cedula
string puesto
float sueldo

estanterias

medias
peso que soporta
categias a guardar
ubicacion en  bodega


** clase 2

identificar entidades y relaciones,atrubutos a tenidaes, dominios de los atributos
determinar los identificadores
determinar las jerarquias
diagramar entidad -relacion
validad y ajustar el esquema conceptual con el usuario


relaciones
binarias
terciarias
refrecivas

hay relaciones de 1 a 1 y de 1 a muchos

** actividad

camion
matricula
modelo
tipo
potencia
camioneros

camionero
camiones
poblacion
salario
telefono
nombre
id
fechas

camiones 1:n<->1:n camioneros
camioneros 1:

paquete
codigo de paquete
descripcion
destinatario
direccion


provincia
codigo
nombre

paquete 1:1 <-> 1:n provincias


robo relacion
rectangulo entidad
subrayado identificador


** funciones triggers y procedimientos

funcion retorna un valor
procedimiento procesa datos y ejecuta operaciones
triggers -> pedasos de codigo que se ejecutan cuando hay un cambio en una tabla


** cambiar diagrama

cambiar ejemplo por atrivutos

cambiar about de la persona

quitar otros

eventos

a√±adirle "descripcion"

cardinalidad

valor agrgado

visualisaciones ,

decir

independencia de otras personas

sistema de recomendacion para 


** funciones sql

retorne el nombre de la pelicula

create function nombre_pelicula (codigo_pelicula int)
return varchar(45)
reads SQL DATA
begin
declare NOMBRE_PELICULA
from FILM F
where F.Film_id=codigo:pelicula

returns integer begin return 1;
end


para llamar la funcion select nombre_pelicula(2);
*** deterministic
no hace consulta en la base de datos
** crear funcion que reciva id pelicula y id del actor y returna si participo 

create function 'participo' (int idpelicula, int idacto)
reads SQL DATA
begin
Declare esta bool;
declare algo int;
select count(1)
into algo
from flim_actor FA
where FA.actor=idacto and FA.flim_id =idpelicula;
if algo=0 then
set esta=false;
else
set esta=true;
return esta;
** trigers
CREATE TRIGGER ins_sum BEFORE INSERT ON account
       FOR EACH ROW SET @sum = @sum + NEW.amount;
** procedimientos
create procedure "name" (in parm1,out return 1)

call 'name'
