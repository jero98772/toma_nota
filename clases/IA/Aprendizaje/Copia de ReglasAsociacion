{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"wGRQTJnMrZF2"},"source":["**Objetivo de este ejercicio**\n","\n","Construccion de patrones con reglas de asociacion\n","\n","\n","Creando una lista con los datos requeridos"]},{"cell_type":"code","metadata":{"id":"xABQ6QViyLa2","executionInfo":{"status":"ok","timestamp":1681491902337,"user_tz":300,"elapsed":8,"user":{"displayName":"jero θηζζβ","userId":"02987265110197884933"}}},"source":["dataset = [['Leche', 'Huevos', 'Pan'],\n","['Leche', 'Huevos'],\n","['Leche', 'Pan'],\n","['Huevos', 'Manzana']]"],"execution_count":1,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"6yaNUtV0yYQc"},"source":["El código anterior crea una lista con las transacciones que usaremos.\n","\n","Echemos un vistazo al resultado:"]},{"cell_type":"code","metadata":{"id":"my84h1Z-ycYM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681491902338,"user_tz":300,"elapsed":8,"user":{"displayName":"jero θηζζβ","userId":"02987265110197884933"}},"outputId":"ea6c8eea-d071-4fae-ad92-cd9cd7f41037"},"source":["print(dataset)"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["[['Leche', 'Huevos', 'Pan'], ['Leche', 'Huevos'], ['Leche', 'Pan'], ['Huevos', 'Manzana']]\n"]}]},{"cell_type":"markdown","metadata":{"id":"w5MoDivOyhEA"},"source":["Primero importamos las bibliotecas necesarias. "]},{"cell_type":"code","metadata":{"id":"LjeI7f3pykzG","executionInfo":{"status":"ok","timestamp":1681491903978,"user_tz":300,"elapsed":1646,"user":{"displayName":"jero θηζζβ","userId":"02987265110197884933"}}},"source":["import pandas as pd\n","from mlxtend.preprocessing import TransactionEncoder\n"],"execution_count":3,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Uu2zkSZoIWJ-"},"source":["**Paso 1:** convierte la lista en un marco de datos con valores booleanos\n","\n","Para ello, guardamos la función TransactionEncoder () como una variable local te.\n","\n","\n","El siguiente paso es crear una matriz (te_array) a partir de la lista del conjunto de datos con valores de Verdadero / Falso (dependiendo de si un elemento aparece / no aparece en un recibo en particular).\n","Luego, convertimos esta matriz en un marco de datos (df) usando elementos como nombres de columna.\n"]},{"cell_type":"code","metadata":{"id":"ron4ndvFIdlB","executionInfo":{"status":"ok","timestamp":1681491903979,"user_tz":300,"elapsed":6,"user":{"displayName":"jero θηζζβ","userId":"02987265110197884933"}}},"source":["te = TransactionEncoder()\n","te_array = te.fit(dataset).transform(dataset)\n","df = pd.DataFrame(te_array, columns=te.columns_)"],"execution_count":4,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"SjzykzgGyq_g"},"source":["\n","Echemos un vistazo al resultado:"]},{"cell_type":"code","metadata":{"id":"ngZ-s5n-ysWj","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681491909763,"user_tz":300,"elapsed":772,"user":{"displayName":"jero θηζζβ","userId":"02987265110197884933"}},"outputId":"f1f78041-bd66-4a08-9b96-75035f2e92af"},"source":["print(df)"],"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["   Huevos  Leche  Manzana    Pan\n","0    True   True    False   True\n","1    True   True    False  False\n","2   False   True    False   True\n","3    True  False     True  False\n"]}]},{"cell_type":"markdown","metadata":{"id":"kbMi0AmWy1qD"},"source":["Esto nos muestra en todas las transacciones qué artículos ocurren o no en un recibo en particular.\n","\n","**Paso 2:** Encuentre conjuntos de elementos que ocurren con frecuencia utilizando el algoritmo Apriori\n","\n","Primero, importamos la función de algoritmo a priori de la biblioteca.\n","Luego, aplicamos el algoritmo a nuestros datos para extraer los conjuntos de elementos que tienen un valor de soporte mínimo de 0.01 (este parámetro se puede cambiar)."]},{"cell_type":"code","metadata":{"id":"azfOB6Yqy32H","executionInfo":{"status":"ok","timestamp":1681491911856,"user_tz":300,"elapsed":4,"user":{"displayName":"jero θηζζβ","userId":"02987265110197884933"}}},"source":["from mlxtend.frequent_patterns import apriori\n","\n","frequent_itemsets_ap = apriori(df, min_support=0.01, use_colnames=True)"],"execution_count":6,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xuP7LcvDy9Bn"},"source":["\n","\n","Echemos un vistazo al resultado:"]},{"cell_type":"code","metadata":{"id":"hbc5kW2VzB_o","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681491926600,"user_tz":300,"elapsed":619,"user":{"displayName":"jero θηζζβ","userId":"02987265110197884933"}},"outputId":"b29b0838-24da-4fa9-d424-cca7468d2abf"},"source":["print(frequent_itemsets_ap)"],"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["   support              itemsets\n","0     0.75              (Huevos)\n","1     0.75               (Leche)\n","2     0.25             (Manzana)\n","3     0.50                 (Pan)\n","4     0.50       (Huevos, Leche)\n","5     0.25     (Huevos, Manzana)\n","6     0.25         (Huevos, Pan)\n","7     0.50          (Leche, Pan)\n","8     0.25  (Huevos, Leche, Pan)\n"]}]},{"cell_type":"markdown","metadata":{"id":"S7r1XEzRzil1"},"source":["**Paso 3:** extraer las reglas de la asociación\n","\n","En este paso final, encontraremos las reglas de asociación para los conjuntos de elementos frecuentes que calculamos en el Paso 2.\n","\n","\n","Primero importamos la función requerida de la página para determinar las reglas de asociación para un conjunto de datos dado usando algún conjunto de parámetros. Luego, lo aplicamos al conjunto de datos de elementos frecuentes que creamos en el Paso 2.\n"]},{"cell_type":"code","metadata":{"id":"5-LQSZffzcGN","executionInfo":{"status":"ok","timestamp":1681492101796,"user_tz":300,"elapsed":576,"user":{"displayName":"jero θηζζβ","userId":"02987265110197884933"}}},"source":["from mlxtend.frequent_patterns import association_rules\n","\n","rules_ap = association_rules(frequent_itemsets_ap, metric=\"confidence\", min_threshold=0.3)\n","# rules_fp = association_rules(frequent_itemsets_fp, metric=\"confidence\", min_threshold=0.8)"],"execution_count":21,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5_W5jU40zt6_"},"source":["\n","Nota: los parámetros \"métrica\" y \"umbral_mínimo\" se pueden ajustar caso por caso, según los requisitos del problema empresarial.\n","\n","Echemos un vistazo a ambos conjuntos de reglas:"]},{"cell_type":"code","metadata":{"id":"XPaDD62mz2qc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681492082535,"user_tz":300,"elapsed":325,"user":{"displayName":"jero θηζζβ","userId":"02987265110197884933"}},"outputId":"39995ea7-5059-4071-c389-a21691b246e7"},"source":["print(rules_ap)\n","# print(rules_fp)"],"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["     antecedents consequents  antecedent support  consequent support  support  \\\n","0      (Manzana)    (Huevos)                0.25                0.75     0.25   \n","1          (Pan)     (Leche)                0.50                0.75     0.50   \n","2  (Huevos, Pan)     (Leche)                0.25                0.75     0.25   \n","\n","   confidence      lift  leverage  conviction  \n","0         1.0  1.333333    0.0625         inf  \n","1         1.0  1.333333    0.1250         inf  \n","2         1.0  1.333333    0.0625         inf  \n"]}]},{"cell_type":"markdown","metadata":{"id":"h_K6wt2z0EMb"},"source":["\n","**Conclusión**\n","\n","Este es un ejemplo básico de implementación del aprendizaje de reglas de asociación para el análisis de la cesta de la compra, que se puede extender para el análisis de palabras en twitters, contenidos en correos, etc.\n","\n","**Tarea**\n","\n","1) Que sucede al ser mas exigente en los umbrales?\n","\n","2) Que interpretacion hace de las reglas??"]},{"cell_type":"markdown","source":["1)Mientras mayor el humbral mas dificil que la IA logre una asociacion"],"metadata":{"id":"2R8xePmXuvwO"}},{"cell_type":"markdown","source":[],"metadata":{"id":"Y_Avz9j9uv5s"}}]}